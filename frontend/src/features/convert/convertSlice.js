
import { createSlice } from '@reduxjs/toolkit'
//redux service not yet needed- see below note 
//import convertService from './convertService'

//---------- NOTE - Once 'notes' functionality is implemented, use async Thunk to enable 'Add converted units to project notes' function (in addition to the extraReducers for async error handling).

//define initial state value that matches what you currently have in Convert.jsx (got feature working before moving state to redux and forms to separate component). 
const initialState = {
  category: '',
  value: 0,
  currentUnit: 'cm',
  newUnit: 'in',
  result: 0,
}

//create slice and export
export const convertSlice = createSlice({
  name: 'convert',
  initialState,
  reducers: {
    setCategory(state, action) {
      state.category = action.payload
    },
    setValue(state, action) {
      state.value = action.payload;
    },
    setCurrentUnit(state, action) {
      state.currentUnit = action.payload
    },
    setNewUnit(state, action) {
      state.newUnit = action.payload
    },
    setResult(state, action) {
      state.result = action.payload
    }
  }
})

//export the actions generated by createSlice above 
export const { setCategory, setValue , setCurrentUnit , setNewUnit , setResult } = convertSlice.actions;

//export the reducer
export default convertSlice.reducer
